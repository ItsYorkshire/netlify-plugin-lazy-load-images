{ "script": "\"use strict\";function _toConsumableArray(a){if(Array.isArray(a)){for(var b=0,c=Array(a.length);b<a.length;b++)c[b]=a[b];return c}return Array.from(a)}document.addEventListener(\"DOMContentLoaded\",function(){var a=[].concat(_toConsumableArray(document.querySelectorAll(\"[data-lazy-src], [data-lazy-srcset]\")));if(\"IntersectionObserver\"in window){var b=new IntersectionObserver(function(a){a.forEach(function(a){if(a.isIntersecting){var c=a.target;c.dataset.lazySrc&&(c.src=c.dataset.lazySrc,c.removeAttribute(\"data-lazy-src\")),c.dataset.lazySrcset&&(c.srcset=c.dataset.lazySrcset,c.removeAttribute(\"data-lazy-srcset\")),b.unobserve(c)}})});a.forEach(function(a){b.observe(a)})}else a.forEach(function(a){a.src=a.dataset.lazySrc,a.removeAttribute(\"lazy-src\")})});" }
